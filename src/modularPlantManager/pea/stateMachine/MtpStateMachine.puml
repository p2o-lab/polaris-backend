/*
 * MIT License
 *
 * Copyright (c) 2021 P2O-Lab <p2o-lab@mailbox.tu-dresden.de>,
 * Chair for Process Control Systems, Technische Universit√§t Dresden
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

@startuml
'https://plantuml.com/class-diagram

class MtpStateMachine{

    + stateMachineService: Interpreter<UserContext, ServiceStateSchema, InternalMtpCommand> | undefined
    + stateMachine: StateMachine<UserContext, ServiceStateSchema, InternalMtpCommand>
    + //readonly// name: string
    - varProcedureCur = 0
    - varProcedureReq = 1

    + MtpStateMachine(name: string, userDefinedGuards: UserDefinedGuard, userDefinedActions: UserDefinedActions)
    + static readonly level1Config: MachineConfig<UserContext, any, InternalMtpCommand>
    + static readonly level2Config: MachineConfig<UserContext, any, InternalMtpCommand>
    + static readonly level3Config: MachineConfig<UserContext, any, InternalMtpCommand>
    + static readonly level4Config: MachineConfig<UserContext, any, InternalMtpCommand>
    + readonly defaultOptions: UserDefinedServiceConfiguration
    + staticOptions: StaticServiceConfiguration
    + reconfigure(updatedGuards: Partial<UserDefinedGuard>, updatedActions: Partial<UserDefinedActions>): void
    + setProcedureReq(procedureReq: number): void
    - updateProcedureCur(): void
    - resetProcedureCur(): void
    + getProcedureReq(): number
    + getProcedureCur(): number
    + start(): void
    + getCommandEnabled(): ControlEnable
    + triggerEvent(event: ServiceMtpCommand): boolean
    + goToNextState(): void
    + getState(): ServiceStateString

}

@enduml
