/*
 * MIT License
 *
 * Copyright (c) 2021 P2O-Lab <p2o-lab@mailbox.tu-dresden.de>,
 * Chair for Process Control Systems, Technische Universit√§t Dresden
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
@startuml
'https://plantuml.com/class-diagram

class Procedure{

    + //readonly// id = IDProvider.generateIdentifier();
    + //readonly// procedureId: number
    + //readonly// name: string
    + //readonly// selfCompleting: boolean
    + //readonly// processValuesIn: InputElement[]
    + //readonly// processValuesOut: IndicatorElement[]
    + //readonly// reportParameters: IndicatorElement[]
    + //readonly// parameters: ServParam[]
    + //readonly// logger: Category

    + Procedure(options: ProcedureModel, connectionHandler: ConnectionHandler)
    + //async// subscribe(): Promise<Procedure>
    + unsubscribe(): void
    + toJson(): ProcedureInterface
    + getDataAssemblyJson(): DataAssemblyOptions[]
    - //static// validProcedureId(valueToCheck: number): boolean



}

Procedure *-- "0..*" ProcedureParameter
Procedure *-- "0..*" ProcessValueIn
Procedure *-- "0..*" ReportValue
Procedure *-- "0..*" ProcessValueOut

abstract class ServiceParameter

ServiceParameter <|-up- ProcedureParameter
ServiceParameter <|-up- ProcessValueIn
ServiceParameter <|-up- ReportValue
ServiceParameter <|-up- ProcessValueOut
@enduml
