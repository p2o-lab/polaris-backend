/*
 * MIT License
 *
 * Copyright (c) 2021 P2O-Lab <p2o-lab@mailbox.tu-dresden.de>,
 * Chair for Process Control Systems, Technische UniversitÃ¤t Dresden
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
@startuml

skinparam monochrome true

participant Polaris_Frontend
participant Polaris_Backend
participant PEA

activate PEA


Polaris_Frontend -> Polaris_Backend: Load PEA
activate Polaris_Backend
Polaris_Frontend <-- Polaris_Backend: loaded PEA
deactivate Polaris_Backend

Polaris_Frontend -> Polaris_Backend: Connect PEA
activate Polaris_Backend
Polaris_Backend -> PEA: connect()
Polaris_Backend <-- PEA
Polaris_Frontend <-- Polaris_Backend
Polaris_Backend -> PEA: subscribe to all important variables
...

loop
Polaris_Backend <- PEA: updates
Polaris_Frontend <- Polaris_Backend: Notification via websocket
end
Polaris_Frontend -> Polaris_Backend: Get specific information
Polaris_Frontend <-- Polaris_Backend: Direct response without communication to PEA

...

Polaris_Frontend -> Polaris_Backend: Disconnect PEA
Polaris_Backend -> PEA: disconnect()
Polaris_Backend <-- PEA
Polaris_Frontend <-- Polaris_Backend
deactivate Polaris_Backend


deactivate PEA

@enduml
