/*
 * MIT License
 *
 * Copyright (c) 2021 P2O-Lab <p2o-lab@mailbox.tu-dresden.de>,
 * Chair for Process Control Systems, Technische Universit√§t Dresden
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
@startuml
'https://plantuml.com/class-diagram

interface SourceModeRuntime{
	+ SrcChannel: DataItem<boolean>
	+ SrcIntAct: DataItem<boolean>
	+ SrcIntAut: DataItem<boolean>
	+ SrcIntOp: DataItem<boolean>
	+ SrcManAct: DataItem<boolean>
	+ SrcManAut: DataItem<boolean>
	+ SrcManOp: DataItem<boolean>
}

enum SourceMode {
    Internal
    Manual
}

class SourceModeController{
    - dAController: any
    - initialize(): void
    - async writeSourceMode(sourceMode: SourceMode): Promise<void>
    + getSourceMode(): SourceMode
    + isSourceMode(expectedSourceMode: SourceMode): boolean
    + async waitForSourceModeToPassSpecificTest(expectedSourceMode: SourceMode): Promise<void>
    + async setToManualSourceMode(): Promise<void>
    + async setToInternalSourceMode(): Promise<void>
    + isManualSource(): boolean
    + isInternalSource(): boolean

}

SourceMode <-- SourceModeController
SourceModeRuntime <-- SourceModeController
SourceModeSpec --> SourceModeController : <<uses>>
SourceModeSpec --> SourceModeMockup : <<uses>>
@enduml
