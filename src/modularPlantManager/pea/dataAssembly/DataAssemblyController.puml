/*
 * MIT License
 *
 * Copyright (c) 2021 P2O-Lab <p2o-lab@mailbox.tu-dresden.de>,
 * Chair for Process Control Systems, Technische Universit√§t Dresden
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
 
@startuml
'https://plantuml.com/class-diagram
!include ServiceControl/ServiceControl.puml
!include ./activeElement/ActiveElement.puml
!include ./DiagnosticElement/DiagnosticElement.puml
!include ./IndicatorElement/indicatorElement.puml
!include ./InputElement/inputElement.puml
!include ./OperationElement/operationElement.puml
!include ../connection/OpcUaConnection.puml
!include ../connection/DataItem.puml



class DataAssemblyController{
    + //readonly// name: string
    + //readonly// metaModelRef: string
    + //readonly// communication!: string
    + //readonly// connection: OpcUaConnection
    + //readonly// tagName: string;
    + //readonly// tagDescription: string;

    + subscriptionActive: boolean
    + parsingErrors: string[] = []
    + options: DataAssemblyOptions
    + defaultReadDataItem: DataItem<any> | undefined
    + defaultReadDataItemType: any;
    + defaultWriteDataItem: DataItem<any> | undefined;
    + defaultWriteDataItemType: any;

    + DataAssemblyController(options: DataAssemblyOptions, connection: OpcUaConnection)
	+ async subscribe(): Promise<DataAssemblyController>
	+ unsubscribe(): void
	+ createDataItem(name: string | string[], access: 'read' | 'write', type?: 'number' | 'string' | 'boolean', silent = false): OpcUaDataItem<any>
	+ getDefaultReadValue(): any | undefined
	+ getLastDefaultReadValueUpdate(): Date | undefined
	+ getDefaultWriteValue(): any | undefined
	+ getLastDefaultWriteValueUpdate(): Date | undefined
	+ logParsingErrors(): void
	+ toJson(): ParameterInterface
}

DataAssemblyController <|-- ActiveElement
DataAssemblyController <|-- BasicDefinition
DataAssemblyController <|-- DiagnosticElement
DataAssemblyController <|-- IndicatorElement
DataAssemblyController <|-- InputElement
DataAssemblyController <|-- OperationElement
DataAssemblyController <|-- ServiceControl
DataAssemblyController *-- "1" OpcUaConnection
DataAssemblyController *-- "0..2" DataItem



@enduml
